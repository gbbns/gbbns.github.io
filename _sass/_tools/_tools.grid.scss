// TOOLS - Grid.................Grid and col generator.

// Column widths as the lowest expression of a fraction
// e.g. 1/3 instead of 2/6.

@function gcd($a, $b) {
	@if($b == 0) {
		 @return $a;
	}

	@return gcd($b, $a % $b);
}

@mixin col($fraction, $type: base) {
	@if($type==base) {
		@include col--base;
	} @else if($type==stacked) {
		@include col--stacked;
	}
	width: ($fraction) * 100%;
}

@mixin col--base {
	box-sizing: border-box;
	float: $float;
	min-height: remy(1px);
	padding-#{$float}: remy(10px);
}

@mixin col--stacked {
	@include col--base;
	margin-bottom: remy(10px);
}

@mixin cols($cols, $modifier: '') {
	@for $i from 1 through $cols - 1 {
		$gcd: gcd($i, $cols);
		$numerator: $i/$gcd;
		$denominator: $cols/$gcd;

		.col--#{$numerator}\/#{$denominator}#{$modifier} {
			width: $i/$cols * 100%;
		}
	}
}

@mixin grid {
	@include clearfix;
	margin-#{$float}: -#{remy(10px)};
}


.col {
	@include col(1);
}

.col--1\/3 {
	width: 33.3%;

}
.col--2\/3 {
	width: 66.6%;
}

.col--stacked {
	@include col--stacked;
	@include col(1, false);
}

@include cols(4);

@include respond-min($bp-md-lg) {
	@include cols(12, '--md');

	.col--1\/8--md {
		width: 12.5%;
	}
}


@include respond-min($bp-md-lg) {
	@include cols(12, '--md-lrg');

	.col--1\/5--md-lrg {
		width: 20%;
	}
	.col--2\/5--md-lrg {
		width: 40%;
	}
	.col--1--md-lrg {
		width: 100%;
	}
}



@include respond-min($bp-lg) {
	@include cols(12, '--lg');

	.col--1--lg {
		width: 100%;
	}
}

	.col__content {
		padding: remy($d-gutter) remy($d-gutter) 0 remy($d-gutter);

		@include respond-min($bp-md) {
			padding: 0;
		}
	}

	.col__content--padded {
		padding: remy($d-gutter) remy($d-gutter) 0 remy($d-gutter);
	}


.grid {
	@include grid;
}

.grid--top {
	margin-top: remy($d-gutter);
}
